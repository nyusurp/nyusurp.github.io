[{"authors":["Cass"],"categories":null,"content":"I am interested in understanding the prevalence and nature of genetic interactions in complex traits. Through growth rate assays, bulk segregant analysis, and comparative models of genetic architecture in budding yeast, we can make headway in characterizing epistasis.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"f3a4a4f411dfe6b3170438671d5dcf03","permalink":"https://nyusurp.github.io/author/cassandra-buzby/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/cassandra-buzby/","section":"authors","summary":"I am interested in understanding the prevalence and nature of genetic interactions in complex traits. Through growth rate assays, bulk segregant analysis, and comparative models of genetic architecture in budding yeast, we can make headway in characterizing epistasis.","tags":null,"title":"Cassandra Buzby","type":"authors"},{"authors":"admin","categories":null,"content":"R Workshop at NYU SURP A 10-session workshop focused on data exploration, visualization, and hypothesis testing.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://nyusurp.github.io/author/site-admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/site-admin/","section":"authors","summary":"R Workshop at NYU SURP A 10-session workshop focused on data exploration, visualization, and hypothesis testing.","tags":null,"title":"Site admin","type":"authors"},{"authors":["Yen"],"categories":null,"content":"Hello, I am a PhD candidate in the Desplan lab at New York University. I study genetic programs that specify different kind of neurons in development. Using fly visual system as my model, I aim to learn how important regulators, like those implicated in spatial and temporal patterning, interacts and defines neuronal fates in development.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"a8063b205305be5508f9d66018eedbb4","permalink":"https://nyusurp.github.io/author/yen-chung-chen/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/yen-chung-chen/","section":"authors","summary":"Hello, I am a PhD candidate in the Desplan lab at New York University. I study genetic programs that specify different kind of neurons in development. Using fly visual system as my model, I aim to learn how important regulators, like those implicated in spatial and temporal patterning, interacts and defines neuronal fates in development.","tags":null,"title":"Yen-Chung Chen","type":"authors"},{"authors":[],"categories":["Jargon"],"content":"There are two different ways to represent where a file is: Absolute or relative.\nAbsolute path for a file is using the root as the starting point (/ for Linux and Mac and C:\\ for Windows). This is usually clear to the computer, but it can be really long and not comprehensible to human and thus impossible to wrap our heads around it and write.\nFor example, I had a note stored in /Users/ycc/Library/Mobile Documents/iCloud~md~obsidian/Documents/YCC/Reading note/@gold.brand_2014.md. There is no way I can remember this and type it when writing a script.\nRelative path is much shorter, but it could be tricky because sometimes where the path is defined relative to is unclear.\nIn R, you can find the working directory with getwd(), which gives you the absolute path of the reference.\nSay your working directory is /Users/me/my_cool_project, and you have a csv file (named myawesome.csv) stored in a subdirectory called \u0026ldquo;data\u0026rdquo;, you can write data/myawesome.csv in R, and R will append /Users/me/my_cool_project before your relative path for you.\nIf you need to ask R to find /Users/me/a_file_outside_wd.txt for you, relative path still has you covered outside your working directory: .. means go up to the parent folder in relative paths, so /Users/me/a_file_outside_wd.txt is ../a_file_outside_wd.txt if your working directory is /Users/me/my_cool_project.\nFor tips to set working directories in RStudio, you might also want to check the official documentation.\n","date":1655164800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1655182609,"objectID":"c11aa7e4fdb5ed44fe9a417a307fdbc9","permalink":"https://nyusurp.github.io/handout/working-directories/","publishdate":"2022-06-14T00:00:00Z","relpermalink":"/handout/working-directories/","section":"handout","summary":"There are two different ways to represent where a file is: Absolute or relative.\nAbsolute path for a file is using the root as the starting point (/ for Linux and Mac and C:\\ for Windows).","tags":[],"title":"Working directories","type":"handout"},{"authors":[],"categories":["Handout"],"content":" AGENDA Introductions Installing R This Worksheet :)   Adpated from material curated by Eugene Plavskin and Grace Avecilla\n  Exploring RStudio  The console: Where you run commands one by one (bottom) The environment: Where you can see what is loaded in R (upper right) The file explorer: An easier way for you to find files (otherwise you’ll need to know the path of a file to use it in R; lower right)   Installing packages  Packages are like kits in experiments: They package the reagents and instructions for otherwise complicated processes for you.\n We’ll be installing 3 packages today\n rmarkdown: A tool that allows you to write your code along with your notes ggplot2: A handy and powerful visualization tool dplyr: A tool that handles and summarizes tables   # This is how we ask R to install packages # R will try to ask several central repositories if they have this package install.packages(\u0026quot;rmarkdown\u0026quot;)  Using Rmarkdown Rmarkdown file allow you to record your thinking process (as text) along with your analyses (as code chunks).\nHaving why you are doing the analysis and the specific code for it will help you catch up faster if you ever need to go back to the same analysis again.\nText and code This is a line of text:\n“I know how to use R!”\n# This is a chunk of code. Do you notice that the background looks different? # Also there is three buttons at the upper right corner # Press the _play_ button, and the output will be shown below the chunk print(\u0026quot;I know how to use R\u0026quot;) ## [1] \u0026quot;I know how to use R\u0026quot; 2+2 ## [1] 4  Running code:\n Click on the run button on the upper-right corner of a chunk\n Ctrl + Enter (Windows) / Cmd + Return (Mac)\n Generating output\n Click the knit button on the upper rim of the editor Knitting will re-run all your code in the file from scratch, which is a good thing because it makes sure:  The code works on its own We haven’t accidentally deleted or added some lines of code that will break the code.      Working directory and Rstudio projects What is a working directory? A working directory is where R will try to find things if you ask it to1.\n Checking and setting your working directory You can check the path of your working directory with getwd() (short for get working directory).\n# Expect to see a path printed below # This is where R find things for you getwd() ## [1] \u0026quot;/Users/ycc/Dropbox/Docs/NYU/Teaching/SURP_2021/NYU_SURP_blogdown/content/handout/2022-06-13-prepare-your-computer-for-r\u0026quot;  Loading files from your working directory Now that you have a directory, files inside that directory can be loaded using functions like read.csv(). This function will take a comma-separated file (which you can make in Excel) and allow you to save it as a variable that R can work with.\nFor the example below, mytestdata.csv can be found in the example data.\n# Open the csv file with Excel or Google Sheet to take a look # mytestdata # And then we load it to see how it looks like in R read.csv(\u0026quot;mytestdata.csv\u0026quot;) ## Day Count Group ## 1 1 12 1 ## 2 1 15 2 ## 3 2 8 1 ## 4 2 3 2 ## 5 3 10 1 ## 6 3 24 2 # You need to ask R to keep the csv files # *Check the environment tab on the upper right corner of your window mytestdata \u0026lt;- read.csv(\u0026quot;mytestdata.csv\u0026quot;) # You can ask R to retrieve what it keeps later by the name you gave to the data mytestdata ## Day Count Group ## 1 1 12 1 ## 2 1 15 2 ## 3 2 8 1 ## 4 2 3 2 ## 5 3 10 1 ## 6 3 24 2   Basic usage of R: Using it as a calculator Enter the following line of command in the console\n17 + 2.3 ## [1] 19.3 In programming, division is often written as slashes (/), while multiplication is written as asterisks (*). Now, let’s try doing these in the console as well:\n# Try multiplying 8 by 7 8*7 ## [1] 56 # Try dividing 48 by 12 48/12 ## [1] 4  An example of our data Cassandra’s data is allele frequencies as read counts from sequencing. To analyze it, she first:\nloads in the data, runs an R function to analyze it, plots using ggplot2.  Here is a quick version of this:\nlibrary(ggplot2) library(dplyr) ## ## Attaching package: \u0026#39;dplyr\u0026#39; ## The following objects are masked from \u0026#39;package:stats\u0026#39;: ## ## filter, lag ## The following objects are masked from \u0026#39;package:base\u0026#39;: ## ## intersect, setdiff, setequal, union library(tidyr) #Read in the data WeightedMeanZStats.100 \u0026lt;- read.csv(\u0026quot;CBData.csv\u0026quot;) #Look at the data (this only prints the first 6 rows) head(WeightedMeanZStats.100) ## X CHROM POS Bulk Parent Int Stat ## 1 result.1 II 100153 -2.3893709 -1.0534663 1.64175559 Z ## 2 result.2 II 100367 -0.9361101 -0.2837268 0.55031705 Z ## 3 result.3 II 100413 -1.1028976 -0.6802854 0.95854049 Z ## 4 result.4 II 100878 0.7191787 0.9999416 -1.25245792 Z ## 5 result.5 II 101289 -1.2163032 1.4995884 0.07063202 Z ## 6 result.6 II 101340 -1.4019217 1.1382948 -0.29809070 Z #Find the dimensions of the datast dim(WeightedMeanZStats.100) ## [1] 95106 7 unique(WeightedMeanZStats.100$Stat) ## [1] \u0026quot;Z\u0026quot; \u0026quot;ZPrime\u0026quot; #Plot the data using ggplot (which we\u0026#39;ll go into more later!) WeightedMeanZStats.100 %\u0026gt;% filter(Stat == \u0026quot;ZPrime\u0026quot;) %\u0026gt;% pivot_longer(c(\u0026quot;Bulk\u0026quot;, \u0026quot;Parent\u0026quot;, \u0026quot;Int\u0026quot;)) %\u0026gt;% ggplot(., aes(x = POS, y = value, color = name)) + geom_line(size = 1) + #geom_point(alpha = 0.1) + #+ geom_hline(yintercept = 0, color = \u0026quot;gray\u0026quot;) + geom_hline(yintercept = c(1.96, -1.96), color = \u0026quot;black\u0026quot;, linetype = \u0026quot;dashed\u0026quot;) + theme(axis.text.x = element_blank()) + ylab(\u0026quot;Oak \u0026lt;- Effect -\u0026gt; Wine\u0026quot;) + scale_color_manual(values = c(\u0026quot;violet\u0026quot;, \u0026quot;lightblue\u0026quot;, \u0026quot;darkorange\u0026quot;)) + facet_grid(~CHROM, scales = \u0026quot;free\u0026quot;) + ggtitle(\u0026quot;Comparison of Zprime per Factor | Weighted Means W = 100\u0026quot;)   See working directory if you are interested.↩︎\n   ","date":1655078400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1655167125,"objectID":"ebda1f992433a7d69beb10ea13a3ed69","permalink":"https://nyusurp.github.io/handout/prepare-your-computer-for-r/","publishdate":"2022-06-13T00:00:00Z","relpermalink":"/handout/prepare-your-computer-for-r/","section":"handout","summary":"AGENDA Introductions Installing R This Worksheet :)   Adpated from material curated by Eugene Plavskin and Grace Avecilla\n  Exploring RStudio  The console: Where you run commands one by one (bottom) The environment: Where you can see what is loaded in R (upper right) The file explorer: An easier way for you to find files (otherwise you’ll need to know the path of a file to use it in R; lower right)   Installing packages  Packages are like kits in experiments: They package the reagents and instructions for otherwise complicated processes for you.","tags":[],"title":"Prepare your computer for R","type":"handout"},{"authors":null,"categories":null,"content":"The contents provided on this website are for information purposes only. We have no intention to provide professional advice via this website, and the information is for discussion and communication only. Please consult a professional person before applying any information posted on this website.\nWe are not responsible for the accuracy, completeness, and timeliness of any information on or linked from this website. We are not liable for any errors or omissions of this information, and the availability of information provided by or linked from the website is not warranted. I am not liable for any damage resulting from or related to the use of this information.\nInformation in this website is licensed under CC BY-NC-ND 4.0 unless otherwise specified in the material. We retain the right to change the terms and conditions at any time and without notice.\n","date":1591225200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1591225200,"objectID":"9b10c1f64082d3869fd4cb1f85809430","permalink":"https://nyusurp.github.io/terms/","publishdate":"2020-06-04T00:00:00+01:00","relpermalink":"/terms/","section":"","summary":"The contents provided on this website are for information purposes only. We have no intention to provide professional advice via this website, and the information is for discussion and communication only.","tags":null,"title":"Terms","type":"page"},{"authors":null,"categories":null,"content":"Who we are? This is a course website (https://nyusurp.github.io) for the R workshop at NYU. The site is currently maintained by Yen-Chung Chen, who is not an expert in website technology nor in privacy law, so the following description is to the best of my understanding of how this website is built and my intentions. If you suspect your privacy is compromised while browsing, please don\u0026rsquo;t hesitate to contact me.\nThe website is written with blogdown, the source is hosted on Github and rendered by Hugo.\nCollection of your personal information The website does not identify you nor track the traffic.\nSharing of your personal information This website does not collect personal information.\n","date":1577833200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577833200,"objectID":"18d05a63a1c8d7ed973cc51838494e41","permalink":"https://nyusurp.github.io/privacy/","publishdate":"2020-01-01T00:00:00+01:00","relpermalink":"/privacy/","section":"","summary":"Who we are? This is a course website (https://nyusurp.github.io) for the R workshop at NYU. The site is currently maintained by Yen-Chung Chen, who is not an expert in website technology nor in privacy law, so the following description is to the best of my understanding of how this website is built and my intentions.","tags":null,"title":"Privacy Policy","type":"page"}]